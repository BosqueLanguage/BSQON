declare namespace Main;

const re_SAFEIDENTIFIERCHAR: CRegex = /[a-zA-Z0-9-_]/c;
type EMAIL = CString of /${re_SAFEIDENTIFIERCHAR}+('.'${re_SAFEIDENTIFIERCHAR})* '@' (${re_SAFEIDENTIFIERCHAR}+ '.')+ [a-zA-Z]+ /c;

type ALPHANUMERIC = CString of / [a-zA-Z0-9]+/c;

const re_USERNAME: CRegex = /.{1, 50}/c;
type USER_NAME = CString of / ${re_USERNAME} /c;

type USER_PHONE =  CString of /[+] [1-9][0-9]?[' ']* [(]? [0-9]{3} [)]? [' ''-']?[0-9]{3}[' ''-']?[0-9]{2}[' ''-']?[0-9]{2} /c;

type USER_ADDRESS = CString of /[0-9]*[' '][A-Z]+[a-z]*[' '][A-Z]+[a-z]*/c;


entity UserDTO {
    field email: Option<EMAIL>;
    field password: ALPHANUMERIC;
	field name: Option<USER_NAME>;
	field phone: Option<USER_PHONE>;
    field address: Option<USER_ADDRESS>;
}

public function main(user: UserDTO): UserDTO{

	assert \/(
	user.name !== 'James Chen'<USER_NAME>,
	user.email !== 'jch270@uky.edu'<EMAIL>,
	user.password !== '12345678'<ALPHANUMERIC>,
	user.phone !== '+12 111 111 11 11'<USER_PHONE>,
	user.address !== '123 Fake Street'<USER_ADDRESS>,
	);

    return user;
}
